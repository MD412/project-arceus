---
description:user rules
globs:
alwaysApply: true
---
Rule 1: Remember that you are operating on Windows. Do not let tool calls get stuck. 

Tool Calls - Always Windows Powershell
Supabase CLI 

q^D^C leads to error "the term 'q' is not recognized

---

Rule 2: Session Context Priority

When user says "/start session" or begins a new conversation:

1. ALWAYS read `docs/working-memory/active_context.md` FIRST
   - This is the single source of truth for current status
   - It contains links to the most recent handoff and priorities
   
2. Follow the navigation from `active_context.md`:
   - Read the "Latest Handoff" link it provides
   - Check "Quick Links" section for other relevant docs
   - Trust the status and priorities stated there
   
3. For detailed next steps:
   - Read the latest handoff's "What's Next" section
   - Forward-looking action items are always in handoff files
   
4. If conflicting information exists:
   - `active_context.md` > latest handoff > older docs
   - Newest timestamp wins
   - Ask user to clarify if truly ambiguous

---

Rule 3: Git Commit Best Practices

STOP committing after every tiny change! This creates noisy git history.

1. BATCH related changes together:
   - Group multiple CSS tweaks into one commit
   - Group multiple related bug fixes
   - Group refactoring of related components
   
2. Only commit immediately when:
   - User explicitly asks to commit
   - Completing a major feature/fix
   - Before switching to unrelated work
   - At natural stopping points
   
3. Good commit practice:
   - Make 5-10 related changes, THEN commit
   - Use descriptive messages covering all changes
   - Example: "refactor: improve scan detail page layout and styling"
   - NOT: "fix: change padding from 16px to 8px"
   
4. While working:
   - Keep making changes without committing
   - Let changes accumulate in working directory
   - Commit when you have a meaningful unit of work

5. **PREFERRED WORKFLOW:**
   - Work on changes throughout the session
   - Let everything accumulate in working directory
   - Commit everything when user types `/end session`
   - This creates clean, session-based commits with meaningful scope 